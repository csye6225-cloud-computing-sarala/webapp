name: Build Packer Custom Image

on:
  pull_request:
    types:
      - closed

jobs:
  build:
    name: Build and Test Web Application & Create Custom AMI
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      # Step 3: Install PostgreSQL
      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib
          sudo systemctl start postgresql

      # Step 4: Set up PostgreSQL user and database with logs
      - name: Set up PostgreSQL user and database
        run: |
          sudo service postgresql start
          if [[ -z "${{ secrets.TEST_DB_USER }}" || -z "${{ secrets.TEST_DB_PASSWORD }}" ]]; then
          echo "DB_USER or DB_PASSWORD secret is not set."
          exit 1
          fi
          if sudo -u postgres psql -tc "SELECT 1 FROM pg_roles WHERE rolname='${{ secrets.TEST_DB_USER }}';" | grep -q 1; then
          echo "User exists, altering password..."
          sudo -u postgres psql -c "ALTER USER ${{ secrets.TEST_DB_USER }} WITH PASSWORD '${{ secrets.TEST_DB_PASSWORD }}';"
          else
          echo "User does not exist, creating user..."
          sudo -u postgres psql -c "CREATE USER ${{ secrets.TEST_DB_USER }} WITH PASSWORD '${{ secrets.TEST_DB_PASSWORD }}';"
          fi
          sudo -u postgres psql -tc "SELECT 1 FROM pg_database WHERE datname='${{ secrets.TEST_DB_NAME }}';" | grep -q 1 || sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.TEST_DB_NAME }} OWNER ${{ secrets.TEST_DB_USER }};"

        # Step 5: Set up the environment file
      - name: Setup Environment File
        run: |
          cat << EOF > ./packer/development.env
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB_PORT=${{ secrets.POSTGRES_DB_PORT }}
          POSTGRES_DB_DIALECT=${{ secrets.POSTGRES_DB_DIALECT }}
          NODE_APP_PORT=${{ secrets.NODE_APP_PORT }}
          EOF
        shell: bash

      - name: Check if environment file exists
        run: ls -l ./packer/development.env

      - name: Show environment file content
        run: cat ./packer/development.env

      # Step 6: Run integration tests
      - name: Install dependencies and run tests
        run: |
          npm install
          npm run test
        env:
          TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}

      # Step 7: Zip the entire repository
      - name: Zip application code
        run: |
          zip -r webapp.zip .

      # Step 8: Upload artifact (optional)
      - name: Upload webapp artifact
        uses: actions/upload-artifact@v3
        with:
          name: webapp.zip
          path: webapp.zip

      # Step 9: Install Packer
      - name: Install Packer
        run: |
          sudo apt-get update && sudo apt-get install -y wget unzip
          wget https://releases.hashicorp.com/packer/1.8.4/packer_1.8.4_linux_amd64.zip
          unzip -o packer_1.8.4_linux_amd64.zip -d /usr/local/bin/

      # Step 10: AWS configure
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 11: Initialize Packer
      - name: Initialize Packer (Install Plugins)
        run: |
          packer init packer/ubuntu-24.04.pkr.hcl

      # Step 12: Run Packer Build
      - name: Run Packer Build
        run: |
          packer build \
          -var "aws_profile=${{ secrets.AWS_PROFILE }}" \
          -var "aws_region=${{ secrets.AWS_REGION }}" \
          -var "aws_instance_type=${{ secrets.AWS_INSTANCE_TYPE }}" \
          -var "aws_source_ami=${{ secrets.AWS_SOURCE_AMI }}" \
          -var "aws_vpc_id=${{ secrets.AWS_VPC_ID }}" \
          -var "aws_subnet_id=${{ secrets.AWS_SUBNET_ID }}" \
          -var "volume_size=${{ secrets.VOLUME_SIZE }}" \
          packer/ubuntu-24.04.pkr.hcl
