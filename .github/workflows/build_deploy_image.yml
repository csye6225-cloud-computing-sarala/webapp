name: Build Packer Custom Image

on:
  pull_request:
    types:
      - closed

jobs:
  build:
    name: Build and Test Web Application & Create Custom AMI
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      # Step 3: Install PostgreSQL
      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib

      # Step 4: Set up PostgreSQL user and database with logs
      - name: Set up PostgreSQL user and database
        run: |
          sudo -u postgres psql -c "CREATE USER '${{ secrets.TEST_DB_USER }}' WITH PASSWORD '${{ secrets.TEST_DB_PASSWORD }}';" || echo "Failed to create user"
          sudo -u postgres psql -c "CREATE DATABASE '${{ secrets.TEST_DB_NAME }}' OWNER '${{ secrets.TEST_DB_USER }}';" || echo "Failed to create database"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE '${{ secrets.TEST_DB_NAME }}' TO '${{ secrets.TEST_DB_USER }}';" || echo "Failed to grant privileges"

      # Step 5: Run integration tests
      - name: Install dependencies and run tests
        run: |
          npm install
          npm run test
        env:
          env:
          TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}

      # Step 6: Build artifact (webapp.zip)
      - name: Build artifact (webapp.zip)
        run: |
          npm run build
          zip -r webapp.zip dist/

      # Step 7: Upload artifact (optional)
      - name: Upload webapp artifact
        uses: actions/upload-artifact@v3
        with:
          name: webapp.zip
          path: webapp.zip

      # Step 8: Install Packer
      - name: Install Packer
        run: |
          sudo apt-get update && sudo apt-get install -y wget unzip
          wget https://releases.hashicorp.com/packer/1.8.4/packer_1.8.4_linux_amd64.zip
          unzip packer_1.8.4_linux_amd64.zip -d /usr/local/bin/

      # Step 9: AWS configure
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 10: Run Packer Build
      - name: Run Packer Build
        run: |
          packer build -var-file=./packer/dev.pkrvars.hcl packer/ubuntu-24.04.pkr.hcl
