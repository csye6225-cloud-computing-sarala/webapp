name: Run Tests on Pull Request

# Run this workflow on pull requests to main branch
on:
  pull_request:
    branches:
      - "main"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.2.0"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Install PostgreSQL
      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib

      # Step 5: Start PostgreSQL service and create or update the test database user
      - name: Set up PostgreSQL
        run: |
          sudo service postgresql start
          if [[ -z "${{ secrets.TEST_DB_USER }}" || -z "${{ secrets.TEST_DB_PASSWORD }}" ]]; then
          echo "DB_USER or DB_PASSWORD secret is not set."
          exit 1
          fi
          if sudo -u postgres psql -tc "SELECT 1 FROM pg_roles WHERE rolname='${{ secrets.TEST_DB_USER }}';" | grep -q 1; then
          echo "User exists, altering password..."
          sudo -u postgres psql -c "ALTER USER ${{ secrets.TEST_DB_USER }} WITH PASSWORD '${{ secrets.TEST_DB_PASSWORD }}';"
          else
          echo "User does not exist, creating user..."
          sudo -u postgres psql -c "CREATE USER ${{ secrets.TEST_DB_USER }} WITH PASSWORD '${{ secrets.TEST_DB_PASSWORD }}';"
          fi
          sudo -u postgres psql -tc "SELECT 1 FROM pg_database WHERE datname='${{ secrets.TEST_DB_NAME }}';" | grep -q 1 || sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.TEST_DB_NAME }} OWNER ${{ secrets.TEST_DB_USER }};"

        # Step 6: Run the tests
      # - name: Run tests
      #   env:
      #     TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
      #     TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
      #     TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
      #     TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
      #     TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}
      # run: npm test
